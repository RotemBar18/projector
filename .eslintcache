[{"C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\index.js":"1","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\serviceWorkerRegistration.js":"2","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\store\\store.js":"4","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\App.jsx":"5","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\cmps\\Header.jsx":"6","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\store\\reducers\\index.js":"7","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\store\\reducers\\userReducer.js":"8","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\store\\reducers\\boardReducer.js":"9","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\routes.js":"10","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\pages\\Home.jsx":"11","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\pages\\LoginSignup.jsx":"12","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\store\\actions\\boardActions.js":"13","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\cmps\\Group.jsx":"14","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\store\\actions\\userActions.js":"15","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\cmps\\TaskList.jsx":"16","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\services\\userService.js":"17","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\cmps\\TaskPreview.jsx":"18","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\services\\httpService.js":"19","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\services\\socketService.js":"20","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\services\\boardService.js":"21","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\services\\utilService.js":"22","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\services\\asyncStorageService.js":"23","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\pages\\BoardDetails.jsx":"24","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\cmps\\LabelPreview.jsx":"25","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\services\\taskService.js":"26","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\services\\groupService.js":"27","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\cmps\\GroupOptions.jsx":"28","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\cmps\\TaskOptions.jsx":"29","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\pages\\BoardPage.jsx":"30","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\cmps\\BoardList.jsx":"31","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\cmps\\BoardCreate.jsx":"32","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\cmps\\BoardPreview.jsx":"33","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\pages\\TaskDetails.jsx":"34","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\services\\labelService.js":"35","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\cmps\\LabelsList.jsx":"36","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\cmps\\LabelEdit.jsx":"37"},{"size":995,"mtime":1622101636592,"results":"38","hashOfConfig":"39"},{"size":5064,"mtime":499162500000,"results":"40","hashOfConfig":"39"},{"size":364,"mtime":499162500000,"results":"41","hashOfConfig":"39"},{"size":323,"mtime":1622043961806,"results":"42","hashOfConfig":"39"},{"size":444,"mtime":1622297502357,"results":"43","hashOfConfig":"39"},{"size":1427,"mtime":1622297502362,"results":"44","hashOfConfig":"39"},{"size":242,"mtime":1622043935035,"results":"45","hashOfConfig":"39"},{"size":625,"mtime":1622101913404,"results":"46","hashOfConfig":"39"},{"size":758,"mtime":1622113996913,"results":"47","hashOfConfig":"39"},{"size":534,"mtime":1622297502364,"results":"48","hashOfConfig":"39"},{"size":796,"mtime":1622297502363,"results":"49","hashOfConfig":"39"},{"size":5398,"mtime":1622307264384,"results":"50","hashOfConfig":"39"},{"size":1668,"mtime":1622297502370,"results":"51","hashOfConfig":"39"},{"size":3733,"mtime":1622301673894,"results":"52","hashOfConfig":"39"},{"size":1574,"mtime":1622295682428,"results":"53","hashOfConfig":"39"},{"size":761,"mtime":1622301681286,"results":"54","hashOfConfig":"39"},{"size":2285,"mtime":1621843885000,"results":"55","hashOfConfig":"39"},{"size":3354,"mtime":1622369286269,"results":"56","hashOfConfig":"39"},{"size":1030,"mtime":1622295668615,"results":"57","hashOfConfig":"39"},{"size":2772,"mtime":1622118983210,"results":"58","hashOfConfig":"39"},{"size":834,"mtime":1622297502368,"results":"59","hashOfConfig":"39"},{"size":973,"mtime":1622299222202,"results":"60","hashOfConfig":"39"},{"size":21022,"mtime":1622324153939,"results":"61","hashOfConfig":"39"},{"size":5786,"mtime":1622304525924,"results":"62","hashOfConfig":"39"},{"size":265,"mtime":1622144113859,"results":"63","hashOfConfig":"39"},{"size":4937,"mtime":1622369813501,"results":"64","hashOfConfig":"39"},{"size":611,"mtime":1622296783704,"results":"65","hashOfConfig":"39"},{"size":725,"mtime":1622229517864,"results":"66","hashOfConfig":"39"},{"size":2912,"mtime":1622309815861,"results":"67","hashOfConfig":"39"},{"size":1403,"mtime":1622286009672,"results":"68","hashOfConfig":"39"},{"size":403,"mtime":1622286009656,"results":"69","hashOfConfig":"39"},{"size":2922,"mtime":1622307264382,"results":"70","hashOfConfig":"39"},{"size":499,"mtime":1622307264383,"results":"71","hashOfConfig":"39"},{"size":12969,"mtime":1622369813495,"results":"72","hashOfConfig":"39"},{"size":840,"mtime":1622306752860,"results":"73","hashOfConfig":"39"},{"size":2247,"mtime":1622307238208,"results":"74","hashOfConfig":"39"},{"size":3984,"mtime":1622369813490,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1avvw9h",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"78"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"78"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":1,"source":"143","usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"78"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\index.js",[],["155","156"],"C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\store\\store.js",[],"C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\App.jsx",[],"C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\cmps\\Header.jsx",[],"C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\store\\reducers\\index.js",[],"C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\store\\reducers\\userReducer.js",[],"C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\store\\reducers\\boardReducer.js",[],"C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\routes.js",[],"C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\pages\\Home.jsx",[],"C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\pages\\LoginSignup.jsx",[],"C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\store\\actions\\boardActions.js",[],"C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\cmps\\Group.jsx",[],"C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\store\\actions\\userActions.js",[],"C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\cmps\\TaskList.jsx",[],"C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\services\\userService.js",[],"C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\cmps\\TaskPreview.jsx",[],"C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\services\\httpService.js",[],"C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\services\\socketService.js",["157","158"],"C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\services\\boardService.js",[],"C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\services\\utilService.js",[],"C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\services\\asyncStorageService.js",[],"C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\pages\\BoardDetails.jsx",[],"C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\cmps\\LabelPreview.jsx",[],"C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\services\\taskService.js",[],"C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\services\\groupService.js",[],"C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\cmps\\GroupOptions.jsx",[],"C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\cmps\\TaskOptions.jsx",["159","160"],"import { Component } from 'react';\r\nimport { LabelsList } from './LabelsList.jsx'\r\n\r\nimport React from 'react'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport class TaskOptions extends Component {\r\n    state = {\r\n        isEditLabelsOpen: false,\r\n        isChangeMembersOpen: false,\r\n        isChangeDueDateOpen: false,\r\n        task: {\r\n            title: ''\r\n        }\r\n    }\r\n\r\n    onUpdateTask = (task) => {\r\n        this.props.onToggleTaskOptions()\r\n        task = { ...task, title: this.state.task.title }\r\n        this.props.onUpdateTask(task)\r\n    }\r\n    handleChange = (ev) => {\r\n        const value = ev.target.value;\r\n        const key = ev.target.name;\r\n        this.setState({ task: { [key]: value } });\r\n    }\r\n\r\n    toggleEditLabels = () => {\r\n        this.setState({ isEditLabelsOpen: !this.state.isEditLabelsOpen })\r\n    }\r\n    toggleChangeMembers = () => {\r\n        this.setState({ isChangeMembersOpen: !this.state.isChangeMembersOpen })\r\n    }\r\n\r\n    toggleChangeDueDate = () => {\r\n        this.setState({ isChangeDueDateOpen: !this.state.isChangeDueDateOpen })\r\n    }\r\n\r\n    render() {\r\n        const { isEditLabelsOpen, isChangeMembersOpen, isChangeDueDateOpen } = this.state\r\n        const { checkLabel,updateLabel,addLabelToBoard, onRemoveLabel, onDeleteTask, onToggleTaskOptions, task, board, onAddLabel, } = this.props\r\n        return (\r\n            <React.Fragment>\r\n                <div onClick={onToggleTaskOptions} className='task-options-window'></div>\r\n                <div className='task-options-container'>\r\n                    <div className='change-task-title'>\r\n                        <textarea cols='1' rows='8' type=\"text\" className='new-title-input' placeholder={task.title} name='title' onChange={this.handleChange}></textarea>\r\n                        <button onClick={() => this.onUpdateTask(task)}>Save</button>\r\n                    </div>\r\n                    <div className='options-btns'>\r\n                        <button className='options-btn' onClick={this.toggleEditLabels} >Edit Labels</button>\r\n                        {isEditLabelsOpen &&\r\n                            <LabelsList updateLabel={updateLabel} addLabelToBoard={addLabelToBoard} checkLabel={checkLabel} onRemoveLabel={onRemoveLabel} task={task} onAddLabel={onAddLabel} toggleEditLabels={this.toggleEditLabels} board={board} />\r\n                        }\r\n                        <button className='options-btn' onClick={this.toggleChangeMembers} >Change Members</button>\r\n                        <button className='options-btn' onClick={this.toggleChangeDueDate} >Change Due Date</button>\r\n                        <button className='options-btn' onClick={()=>onDeleteTask(task.id)}>Delete</button>\r\n                    </div>\r\n\r\n                    {/* <button onClick={onDeleteTask}>Delete List</button> */}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\pages\\BoardPage.jsx",["161"],"import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { loadBoards, saveBoard } from '../store/actions/boardActions.js'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { BoardList } from '../cmps/BoardList'\r\nimport { BoardCreate } from '../cmps/BoardCreate'\r\n\r\nclass _BoardPage extends React.Component {\r\n\r\n    state = {\r\n        isCreateHidden: true,\r\n        board: {\r\n            \"title\": '',\r\n            \"bgColor\": '#000'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadBoards()\r\n    }\r\n\r\n    toggleModalVisibility = (boolean) => {\r\n        this.setState({isCreateHidden : boolean})\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        this.setState({ board: { ...this.state.board, [ev.target.name]: ev.target.value } })\r\n    }\r\n\r\n    onCreateBoard = (ev) => {\r\n        ev.preventDefault()\r\n        this.props.saveBoard(this.state.board)\r\n        this.setState({ isCreateHidden: true })\r\n    }\r\n\r\n    render() {\r\n        const { boards } = this.props\r\n        if (!boards) return <div>Loading...</div>\r\n        return (\r\n            <section>\r\n                <h1>Board Page</h1>\r\n                <BoardCreate />\r\n                <BoardList boards={boards}/>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        boards: state.boardModule.boards\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    saveBoard\r\n}\r\n\r\n\r\nexport const BoardPage = connect(mapStateToProps, mapDispatchToProps)(_BoardPage)","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\cmps\\BoardList.jsx",[],"C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\cmps\\BoardCreate.jsx",["162","163","164","165","166","167","168","169","170","171","172"],"import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { saveBoard } from '../store/actions/boardActions.js'\r\nimport Plus from '../assets/imgs/plus.png'\r\nimport tempImg from '../assets/imgs/uc.png'\r\n\r\nclass _BoardCreate extends React.Component {\r\n\r\n    state = {\r\n        isCreateHidden: true,\r\n        board: {\r\n            title: '',\r\n            bgColor: '#000',\r\n        }\r\n    }\r\n\r\n    toggleModalVisibility = (boolean) => {\r\n        this.setState({ isCreateHidden: boolean })\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        this.setState({ board: { ...this.state.board, [ev.target.name]: ev.target.value } })\r\n    }\r\n\r\n    onCreateBoard = (ev) => {\r\n        const { boards } = this.props\r\n        const lastBoardId = boards[boards.length - 1]._id\r\n\r\n        ev.preventDefault()\r\n        if (!this.state.board.title) return\r\n        this.props.saveBoard(this.state.board, lastBoardId)\r\n        this.setState({isCreateHidden: true, board: { ...this.state.board, ['title']: ''}})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"board-create\" onClick={() => { this.toggleModalVisibility(false) }}>\r\n                    <img className=\"plus-icon\" src={Plus} />\r\n                </div>\r\n                <form className=\"create-board\" hidden={this.state.isCreateHidden} onSubmit={this.onCreateBoard} autocomplete=\"off\">\r\n                    <input type=\"text\" name=\"title\" placeholder=\"Enter Board Name...\" onChange={this.handleChange} value={this.state.board.title}></input>\r\n                    <div className=\"board-background-options\">\r\n                        <div className=\"board-background-thumb\"><img src={tempImg} /></div>\r\n                        <div className=\"board-background-thumb\"><img src={tempImg} /></div>\r\n                        <div className=\"board-background-thumb\"><img src={tempImg} /></div>\r\n                        <div className=\"board-background-thumb\"><img src={tempImg} /></div>\r\n                        <div className=\"board-background-thumb\"><img src={tempImg} /></div>\r\n                        <div className=\"board-background-thumb\"><img src={tempImg} /></div>\r\n                        <div className=\"board-background-thumb\"><img src={tempImg} /></div>\r\n                        <div className=\"board-background-thumb\"><img src={tempImg} /></div>\r\n                        <div className=\"board-background-thumb\"><img src={tempImg} /></div>\r\n                    </div>\r\n                    <button>Create</button>\r\n                    <button onClick={() => { this.toggleModalVisibility(true) }}>Cancel</button>\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        boards: state.boardModule.boards\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    saveBoard\r\n}\r\n\r\n\r\nexport const BoardCreate = connect(mapStateToProps, mapDispatchToProps)(_BoardCreate)","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\cmps\\BoardPreview.jsx",[],"C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\pages\\TaskDetails.jsx",["173","174"],"import { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Avatar, TextField, Input, Grid } from '@material-ui/core';\r\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\nimport AssignmentOutlinedIcon from '@material-ui/icons/AssignmentOutlined';\r\nimport PersonOutlineOutlinedIcon from '@material-ui/icons/PersonOutlineOutlined';\r\nimport LabelOutlinedIcon from '@material-ui/icons/LabelOutlined';\r\nimport ListOutlinedIcon from '@material-ui/icons/ListOutlined';\r\nimport TodayOutlinedIcon from '@material-ui/icons/TodayOutlined';\r\nimport AttachFileOutlinedIcon from '@material-ui/icons/AttachFileOutlined';\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\nimport DoneOutlinedIcon from '@material-ui/icons/DoneOutlined';\r\n\r\nimport { saveBoard } from '../store/actions/boardActions.js';\r\nimport { taskService } from '../services/taskService.js';\r\nimport { utilService } from '../services/utilService.js';\r\nimport { LabelPreview } from '../cmps/LabelPreview.jsx';\r\nimport { LabelEdit } from '../cmps/LabelEdit';\r\n\r\n\r\nclass _TaskDetails extends Component {\r\n\r\n    state = {\r\n        task: null,\r\n        isMembersModalShow: false,\r\n        isLabelsModalShow: false,\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { taskId, groupId } = this.props.match.params;\r\n        const board = this.props.currBoard;\r\n        const task = await taskService.getTaskById(taskId, groupId, board);\r\n        this.setState({ task });\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        let { name, value } = target\r\n        const { task } = this.state\r\n        this.setState({ task: { ...task, [name]: value } }, () => {\r\n            const board = this.props.currBoard;\r\n            taskService.updateTask(board, this.props.match.params.groupId, this.state.task)\r\n            this.props.saveBoard(board)\r\n        })\r\n    }\r\n\r\n    // getBtnList = () => {\r\n    //     const btns = [\r\n    //         { name: 'Members', icon: <PersonOutlineOutlinedIcon className=\"icon\" /> },\r\n    //         { name: 'Labels', icon: <LabelOutlinedIcon className=\"icon\" /> },\r\n    //         { name: 'Checklist', icon: <ListOutlinedIcon className=\"icon\" /> },\r\n    //         { name: 'Dates', icon: <TodayOutlinedIcon className=\"icon\" /> },\r\n    //         { name: 'Attachment', icon: <AttachFileOutlinedIcon className=\"icon\" /> }];\r\n    //     return btns;\r\n    // }\r\n\r\n    goBack = () => {\r\n        this.props.history.push(`/board/${this.props.match.params.boardId}`)\r\n    }\r\n\r\n    toggleModal = (modal) => {\r\n        this.setState({ ...this.state, [modal]: !this.state[modal] })\r\n    }\r\n\r\n    toggleTaskMember = (member) => {\r\n        const board = this.props.currBoard;\r\n        const { task } = this.state\r\n        taskService.toggleTaskMember(task, member)\r\n        this.setState({ ...this.state, task }, () => {\r\n            this.props.saveBoard(board)\r\n        })\r\n    }\r\n\r\n    checkIfMemberInTask = (name) => {\r\n        var patten = new RegExp(name);\r\n        return this.state.task.members?.some(member => {\r\n            return patten.test(member.fullname)\r\n        })\r\n    }\r\n\r\n    toggleEditLabels = () => {\r\n        this.setState({ isEditLabelsOpen: !this.state.isEditLabelsOpen })\r\n    }\r\n\r\n    getLableById = (labelId) => {\r\n        return this.props.currBoard.labels.find(label => label.id === 'l' + labelId)\r\n    }\r\n\r\n    getLabelProperty = (labelId) => {\r\n        const board = this.props.currBoard;\r\n        return board.labels?.find(label => label.id === 'l' + labelId)\r\n    }\r\n\r\n\r\n    render() {\r\n        const { task } = this.state\r\n        if (!task) return <div>loading</div>\r\n        console.log(task)\r\n        const description = (task.description) || ''\r\n        const { byMember, comments, members, labelIds } = task;\r\n        const board = this.props.currBoard;\r\n        const { groupId } = this.props.match.params;\r\n        return (\r\n            <section className=\"task-details flex\">\r\n                <div className=\"window\" onClick={this.goBack}></div>\r\n                <div className=\"card flex column\">\r\n                    <div className=\"cover flex column\">\r\n                        <CloseOutlinedIcon className='btn task-details-close' onClick={this.goBack} />\r\n                        <button className=\"btn flex\">cover</button>\r\n                    </div>\r\n                    <div className=\"header\">\r\n                        <div className=\"title flex\">\r\n                            <AssignmentOutlinedIcon className=\"taskIcon\" color=\"disabled\" />\r\n                            <Input defaultValue={task.title}\r\n                                disableUnderline\r\n                                onChange={this.handleChange}\r\n                                name=\"title\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"main flex row\">\r\n                        <div className=\"details flex column\">\r\n                            {members && <div className=\"members\">\r\n                                <h4>Members</h4>\r\n                                <AvatarGroup max={10}>\r\n                                    {members && members.map(member => {\r\n                                        return <Avatar className=\"avatar\"\r\n                                            key={member._id} src={member.imgUrl}>{utilService.getNameInitials(member.fullname)}</Avatar>\r\n                                    })}\r\n                                </AvatarGroup>\r\n                            </div>}\r\n                            {labelIds && <div className=\"labels flex\">\r\n                                {labelIds.map(labelId => {\r\n                                    const label = this.getLableById(labelId)\r\n                                    return <LabelPreview key={label.id} lable={label} />\r\n                                })}\r\n                            </div>}\r\n                            <div className=\"form flex column\">\r\n                                <h4><DescriptionOutlinedIcon className=\"icon\" color=\"disabled\" /> Description</h4>\r\n                                <TextField className=\"textarea\"\r\n                                    name=\"description\"\r\n                                    id=\"outlined-multiline-static\"\r\n                                    multiline\r\n                                    rows={1}\r\n                                    placeholder=\"add a more detailed description...\"\r\n                                    value={description}\r\n                                    variant=\"outlined\"\r\n                                    size='small'\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"comments flex column\">\r\n                                {comments && comments.map(comment => {\r\n                                    return <Grid item className=\"comment flex\" key={comment.id}>\r\n                                        {comment.byMember && <Avatar src={comment.byMember.imgUrl} className=\"avatar\">{!comment.byMember.imgUrl && utilService.getNameInitials(comment.byMember.fullname)}</Avatar>}\r\n                                        <Input id=\"input-with-icon-grid\" placeholder=\"Write a comment...\" value={comment.txt}\r\n                                            disableUnderline\r\n                                            fullWidth\r\n                                        /></Grid>\r\n                                })}\r\n                                <Grid item className=\"comment flex\">\r\n                                    {byMember && <Avatar src={byMember.imgUrl} className=\"avatar\">{!byMember.imgUrl && utilService.getNameInitials(byMember.fullname)}</Avatar>}\r\n                                    <Input id=\"input-with-icon-grid \" placeholder=\"Write a comment...\" value=''\r\n                                        disableUnderline\r\n                                        fullWidth\r\n                                    />\r\n                                </Grid>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"sidebar flex column\">\r\n                            <button className=\"btn flex\" onClick={() => this.toggleModal('isMembersModalShow')}><PersonOutlineOutlinedIcon className=\"icon\" /> Members</button>\r\n                            <button className=\"btn flex\" onClick={() => this.toggleModal('isLabelsModalShow')}><LabelOutlinedIcon className=\"icon\" /> Labels</button>\r\n                            <button className=\"btn flex\"><ListOutlinedIcon className=\"icon\" /> Checklist</button>\r\n                            <button className=\"btn flex\"><TodayOutlinedIcon className=\"icon\" /> Dates</button>\r\n                            <button className=\"btn flex\"><AttachFileOutlinedIcon className=\"icon\" /> Attachment</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.isMembersModalShow && <div className=\"modal members flex column\">\r\n                    {board.members && board.members.map(member => {\r\n                        return <div className=\"member flex\" onClick={() => this.toggleTaskMember(member)}><Avatar className=\"avatar\"\r\n                            key={member._id} src={member.imgUrl}>{utilService.getNameInitials(member.fullname)}</Avatar>\r\n                            <p>{member.fullname}</p>\r\n                            {this.checkIfMemberInTask(member.fullname) && <DoneOutlinedIcon />}\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n                {this.state.isLabelsModalShow &&\r\n                    <div className=\"modal labels-list\">\r\n                        {labelIds?.map(labelId => {\r\n                            const labelProperty = this.getLabelProperty(labelId)\r\n                            console.log(labelProperty)\r\n                            return <div className=\"label\" style={{ backgroundColor: labelProperty.color }}>\r\n                                {labelProperty.title || ''}\r\n                            </div>\r\n                        })\r\n                        }\r\n                    </div>}\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        currBoard: state.boardModule.currBoard,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveBoard,\r\n}\r\n\r\n\r\nexport const TaskDetails = connect(mapStateToProps, mapDispatchToProps)(_TaskDetails)","C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\services\\labelService.js",[],"C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\cmps\\LabelsList.jsx",[],"C:\\Users\\rotem\\OneDrive\\שולחן העבודה\\New folder\\frontend\\src\\cmps\\LabelEdit.jsx",["175"],{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":19,"column":10,"nodeType":"182","messageId":"183","endLine":19,"endColumn":29},{"ruleId":"180","severity":1,"message":"184","line":43,"column":7,"nodeType":"182","messageId":"183","endLine":43,"endColumn":20},{"ruleId":"180","severity":1,"message":"185","line":40,"column":35,"nodeType":"182","messageId":"183","endLine":40,"endColumn":54},{"ruleId":"180","severity":1,"message":"186","line":40,"column":56,"nodeType":"182","messageId":"183","endLine":40,"endColumn":75},{"ruleId":"180","severity":1,"message":"187","line":4,"column":10,"nodeType":"182","messageId":"183","endLine":4,"endColumn":14},{"ruleId":"188","severity":1,"message":"189","line":32,"column":76,"nodeType":"190","messageId":"191","endLine":32,"endColumn":89,"fix":"192"},{"ruleId":"193","severity":1,"message":"194","line":39,"column":21,"nodeType":"195","endLine":39,"endColumn":61},{"ruleId":"193","severity":1,"message":"194","line":44,"column":65,"nodeType":"195","endLine":44,"endColumn":86},{"ruleId":"193","severity":1,"message":"194","line":45,"column":65,"nodeType":"195","endLine":45,"endColumn":86},{"ruleId":"193","severity":1,"message":"194","line":46,"column":65,"nodeType":"195","endLine":46,"endColumn":86},{"ruleId":"193","severity":1,"message":"194","line":47,"column":65,"nodeType":"195","endLine":47,"endColumn":86},{"ruleId":"193","severity":1,"message":"194","line":48,"column":65,"nodeType":"195","endLine":48,"endColumn":86},{"ruleId":"193","severity":1,"message":"194","line":49,"column":65,"nodeType":"195","endLine":49,"endColumn":86},{"ruleId":"193","severity":1,"message":"194","line":50,"column":65,"nodeType":"195","endLine":50,"endColumn":86},{"ruleId":"193","severity":1,"message":"194","line":51,"column":65,"nodeType":"195","endLine":51,"endColumn":86},{"ruleId":"193","severity":1,"message":"194","line":52,"column":65,"nodeType":"195","endLine":52,"endColumn":86},{"ruleId":"180","severity":1,"message":"196","line":20,"column":10,"nodeType":"182","messageId":"183","endLine":20,"endColumn":19},{"ruleId":"180","severity":1,"message":"197","line":103,"column":17,"nodeType":"182","messageId":"183","endLine":103,"endColumn":24},{"ruleId":"180","severity":1,"message":"198","line":4,"column":10,"nodeType":"182","messageId":"183","endLine":4,"endColumn":20},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],"no-unused-vars","'createSocketService' is defined but never used.","Identifier","unusedVar","'socketIsReady' is assigned a value but never used.","'isChangeMembersOpen' is assigned a value but never used.","'isChangeDueDateOpen' is assigned a value but never used.","'Link' is defined but never used.","no-useless-computed-key","Unnecessarily computed property ['title'] found.","Property","unnecessarilyComputedProperty",{"range":"201","text":"202"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'LabelEdit' is defined but never used.","'groupId' is assigned a value but never used.","'TitleSharp' is defined but never used.","no-global-assign","no-unsafe-negation",[985,994],"'title'"]